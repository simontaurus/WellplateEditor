class Analyzer{constructor(){return this}static init(e){return this.Report=Report.new(e).init(),this}static roundNb(e){let t=this.Report.Options.Decimals.Selected;return void 0===e.toFixed||"All"==t?e:e.toFixed(t)}static logValue(e){let t=Math.log10(e.Value);return this.Report.Options.Shift.getValue()?t+Unit.shiftForUnit(e.Name):t}static isNumeric(e){return void 0!==e&&void 0!==e.toFixed&&0==isNaN(e)}static divHeight(e){return 1.65*(e+.5)+"em"}static rowWidth(e,t){let l=t*e*.9*(1-.2*t/20);return l=Math.max(l,2),l+"em"}static noData(){return'<span class="warning">&Oslash;</span>'}static header(e){if(e.Unit){let t='<span class="Header_Conc" name="'+e.Name+'">';return this.Report.Options.LogScale.getValue()?t+=this.headerConcLog(e.Name):t+=e.Name,t+"</span>"}return e.Name}static headerConcLog(e,t){return t&&(e=Unit.rootForUnit(e)),"Log<sub>10</sub>("+e+")"}static valueHeader(e){if("Conc"==e.Type){let t=this.logValue(e),l="";return l=this.Report.Options.LogScale.getValue()?this.roundNb(t):this.roundNb(e.Value),'<th class="Value_PlaceHolder Header_Conc" value="'+e.Value+'" logvalue="'+t+'" shift="'+Unit.shiftForUnit(e.Name)+'">'+l+"</th>"}return"<th>"+e.Name+"</th>"}static cellForValue(e,t){let l=' class="',i=e,a="",s="";if(""===e&&(i=this.noData()),t&&(t.Class&&(l+=t.Class+" "),t.Border&&t.Index>0&&(l+="BorderLeft "),"#"==t.Type&&""!==e&&(i=this.roundNb(e),l+="Value_PlaceHolder",a=' value="'+e+'"'),t.Title&&(s=' title="'+t.Title+'"'),t.ReturnLength)){let t="<td"+l+'"'+a+s+">"+i+"</td>";return""===e?{HTML:t,Length:2}:void 0===i.length?{HTML:t,Length:i.toString().length}:{HTML:t,Length:i.length}}return"<td"+l+'"'+a+s+">"+i+"</td>"}static arrayToRow(e,t){let l="",i=0;return 0==e.length?l+="<td>"+this.noData()+"</td>":e.forEach((function(e,a){let s={Border:!0,Index:a,ReturnLength:!0};t&&(t.Types&&(s.Type=t.Types[a]),t.Titles&&(s.Title=t.Titles[a]));let n=this.cellForValue(e,s);l+=n.HTML,i=Math.max(i,n.Length)}),this),'<div class="InnerTable_Wrapper"><table class="InnerTableRow" style="min-width: '+this.rowWidth(e.length,i)+'"><tr>'+l+"</tr></table></div>"}static arrayToColumn(e,t,l){let i=this.Report.Options,a="";if(i.Collapse.getValue()){let t=i.Rows.getValue();a=' style="max-height: '+this.divHeight(t),e.length<=t?a+='; overflow-y: unset"':a+='; overflow-y: scroll"'}let s='<td class="Border"',n=e.length;n>1&&(s+=' style="vertical-align: top"'),s+='><div class="InnerTable_Wrapper"'+a,l&&l.Sync&&(s+=' onmouseenter="Analyzer.scrollActive = '+t+'" onscroll="Analyzer.syncScrolling()"'),s+='><table class="InnerTable">';let r={Total:0,Avg:"",SD:"",CV:"",N:0},o=[];e.forEach((function(e,t){let l=e;void 0!==e.Value&&(l=e.Value);let i="#";0==this.isNumeric(l)?i="Text":(o.push(l),r.Total+=l),s+="<tr>"+this.cellForValue(l,{Type:i,Class:e.Class})+"</tr>"}),this),0==n&&(s+="<tr><td>"+this.noData()+"</td></tr>"),s+="</table></div></td>";let h=o.length;if(h>0){let e=r.Total/h;if(r.Avg=e,h>1){let t=o.map((function(t){return Math.pow(t-e,2)})).reduce((function(e,t){return e+t})),l=Math.sqrt(t/h);r.SD=l,r.CV=100*l/e}}return r.N=n,h!=n&&(r.N=h+" ("+n+")"),{HTML:s,Stats:r}}static objectToTable(e,t){let l="";l+='<table class="OuterTable">',l+="<tr><td></td>",e.forEach((function(e){e.Visible&&(l+="<th>"+e.Label+"</th>")})),l+="</tr><tr><td></td>";let i=[];if(e.forEach((function(e,a){let s=this.arrayToColumn(e.Values,a,t);i.push(s.Stats),e.Visible&&(l+=s.HTML)}),this),t&&t.StatsOnly)return{Stats:i};l+="</tr><tfoot>",l+='<tr title="Mean of the numerical values for this column. Not available for text"><td>Average</td>',e.forEach((function(e,t){e.Visible&&(l+=Analyzer.cellForValue(i[t].Avg,{Type:"#"}))})),l+="</tr>",l+='<tr title="Standard deviation of the numerical values for this column. Available with 2 or more values"><td>SD</td>',e.forEach((function(e,t){e.Visible&&(l+=Analyzer.cellForValue(i[t].SD,{Type:"#"}))})),l+="</tr>";let a="none";return this.Report.Options.CV.getValue()&&(a="table-row"),l+='<tr class="CV_Row" style="display: '+a+'" title="Coefficient of variation for the numerical values in this column. Available with 2 or more values"><td>CV (%)</td>',e.forEach((function(e,t){e.Visible&&(l+=Analyzer.cellForValue(i[t].CV,{Type:"#"}))})),l+="</tr>",l+='<tr title="Count of valid numerical values for this column. If textual, invalid or empty values are present, the total count of values is indicated in parenthesis"><td>N</td>',e.forEach((function(e,t){e.Visible&&(l+="<td>"+i[t].N+"</td>")})),l+="</tr></tfoot>",l+="</table>",{HTML:l,Stats:i}}static syncScrolling(){let e=event.target,t=e.parentElement,l=t.cellIndex-1,i=this.scrollActive;if(i==l){this.Scroll=e.scrollTop;let l=t.parentElement.getElementsByClassName("InnerTable_Wrapper"),a=l.length;for(let e=0;e<a;e++)if(e!=i){l[e].scrollTop=this.Scroll}}}static groupedTable(e,t,l,i){let a="";a+='<table class="OuterTable">';let s='<tr><td rowspan="2"></td><td rowspan="2"></td>',n="<tr>";return t.forEach((function(e){1==e.Values.length?s+='<th rowspan = "2">'+this.header(e)+"</th>":(s+='<th colspan="'+e.Values.length+'">'+this.header(e)+"</th>",e.Values.forEach((function(e){n+=this.valueHeader(e)}),this))}),this),a+=s+"</tr>"+n+"</tr>",e.forEach((function(e,s){let n=e.Values.length;1==n?(a+="<tr><th>"+this.header(e)+"</th>"+this.valueHeader(e.Values[0]),a+=this.groupedDataRow(e.Values[0],t,l,i),a+="</tr>"):(a+='<tr><th rowspan="'+n+'">'+this.header(e)+"</th>",e.Values.forEach((function(e,s){s>0&&(a+="<tr>"),a+=this.valueHeader(e),a+=this.groupedDataRow(e,t,l,i),a+="</tr>"}),this)),a+="</tr>"}),this),a+="</table>",{HTML:a}}static groupedDataRow(e,t,l,i){let a="",s=e.Tags;return t.forEach((function(e){e.Values.forEach((function(e){let t=[];e.Tags.forEach((function(e){s.includes(e)&&t.push(Number(l[e]))}));let n=this.arrayToColumn(t),r=n.Stats;switch(i){case"Row":a+='<td class="Border">'+this.arrayToRow(t,{Types:Array(t.length).fill("#")})+"</td>";break;case"Average":a+=this.cellForValue(r.Avg,{Class:"BorderSpaced",Type:"#"});break;case"Avg, SD, N":a+='<td class="Border">'+this.arrayToRow([r.Avg,r.SD,r.N],{Types:["#","#","Text"],Titles:["Average","SD","N"]})+"</td>";break;default:a+=n.HTML}}),this)}),this),a}static tableToString(e,t){let l="";t&&t.Title&&(l=t.Title+"\n");let i=e.rows,a=i.length,s=0;if(t&&t.TableType)switch(t.TableType){case"Inner":l+=this.rowToString(i[0])+"\n",l+=this.innerRowToString(i[1])+"\n",s=2;case"Simple":for(let e=s;e<a;e++)"none"!=i[e].style.display&&(e>s&&(l+="\n"),l+=this.rowToString(i[e]));break;case"Grouped":l="Aggregation method: "+this.Report.UI.DataView.Selected+"\n",l+=this.groupedTableToString(e)}return l}static rowToString(e){let t="",l=e.cells,i=l.length,a=1==this.Report.Options.ExportFormat.getValue(),s=this.Report.Options.LogScale.getValue();for(let e=0;e<i;e++)e>0&&(t+="\t"),t+=this.valueFromCell(l[e],a,s);return t}static valueFromCell(e,t,l){return t?e.innerText:e.hasAttribute("logvalue")&&l?e.getAttribute("logvalue"):e.hasAttribute("value")?e.getAttribute("value"):e.innerText}static innerRowToString(e,t){let l=1==this.Report.Options.ExportFormat.getValue(),i=this.Report.Options.LogScale.getValue(),a=1;t&&t.Start&&(a=t.Start);let s="",n=0,r=!0,o=e.cells.length;for(;r;){let h="\t";r=!1;for(let t=a;t<o;t++){let s=e.cells[t].children[0].children[0].rows[n],o="";s&&(r=!0,o=this.valueFromCell(s.children[0],l,i)),t>a&&(h+="\t"),h+=o}r&&(n>0&&(s+="\n",t&&void 0!==t.AfterLine&&(s+=t.AfterLine)),s+=h),n++}return s}static groupedTableToString(e){let t=1==this.Report.Options.ExportFormat.getValue(),l=this.Report.Options.LogScale.getValue(),i="",a=e.rows,s=this.Report.UI.DataView.Selected,n=this.groupedColCount(a[0].cells),r=this.groupedEltMaxPerCol(a,n);i+=this.groupedHeader(a[0],a[1],n,r,t,l);let o=a.length;for(let e=2;e<o;e++){i+="\n"+this.groupedHeaderRow(a[e].cells[0],a[e].cells[1],t,l);let o=a[e].cells.length-n;switch(s){case"Column":i+=this.innerRowToString(a[e],{Start:o,AfterLine:"\t"});break;case"Average":for(let s=0;s<n;s++)i+="\t"+this.valueFromCell(a[e].cells[o+s],t,l);break;default:for(let s=0;s<n;s++)i+=this.rowTableToString(a[e].cells[o+s].children[0].children[0],r[s],t,l)}}return i}static groupedColCount(e){let t=0,l=e.length;for(let i=2;i<l;i++){let l=e[i];l.hasAttribute("rowspan")?t++:t+=Number(l.getAttribute("colspan"))}return t}static groupedEltMaxPerCol(e,t){let l=e.length,i=[];switch(this.Report.UI.DataView.Selected){case"Row":i=Array(t).fill(0);for(let a=2;a<l;a++){let l=e[a].getElementsByClassName("InnerTableRow");for(let e=0;e<t;e++)i[e]=Math.max(i[e],l[e].rows[0].cells.length)}break;case"Avg, SD, N":i=Array(t).fill(3);break;default:i=Array(t).fill(1)}return i}static groupedHeader(e,t,l,i,a,s){let n="",r="",o=2,h=0;for(let c=0;c<l;c++){let l=e.cells[o];if(l.hasAttribute("rowspan")){let e="".padEnd(i[c]-1,"\t");n+="\t"+e,r+=this.valueFromCell(l,a,s)+"\t"+e}else{let e=Number(l.getAttribute("colspan"));n+=this.valueFromCell(l,a,s);for(let l=0;l<e;l++){let e="".padEnd(i[c]-1,"\t");n+="\t"+e,r+=this.valueFromCell(t.cells[h],a,s)+"\t"+e,h++}c+=e-1}o++}return"\t\t"+n+"\n\t\t"+r}static groupedHeaderRow(e,t,l,i){return e.hasAttribute("rowspan")?this.valueFromCell(e,l,i)+"\t"+this.valueFromCell(t,l,i):"TD"==e.nextSibling.nodeName?"\t"+this.valueFromCell(e,l,i):this.valueFromCell(e,l,i)+"\t"+this.valueFromCell(t,l,i)}static rowTableToString(e,t,l,i){let a="",s=e.rows[0].cells,n=s.length;for(let e=0;e<t;e++)a+=e<n?"\t"+this.valueFromCell(s[e],l,i):"\t";return a}}class Bloc{constructor(e){return this.ID=e.ID,this.Name=e.Name,this.File=e.File,this.Sections=[],this.SectionsTab=new TabControl({ID:e.ID,Multiple:!0,Layout:"Horizontal",Tabs:[]}),this}init(){return this.SectionsTab.init(),this}getSection(e,t){let l=!1,i=0,a=this.Sections,s=a.length;for(;!l&&i<s;)a[i].Name==e?l=!0:i++;return l?this.Sections[i]:this.newSection(e,i,t)}newSection(e,t,l){let i={Name:e,Bloc:this,ID:this.ID+"_"+t};l&&Object.assign(i,l);let a=new Section(i);return this.Sections.push(a),this.SectionsTab.addTab({Label:e,SetActive:!0,Content:{Type:"HTML",Value:a.HTML(e)}}),a.activateControls(),a}}class Report{constructor(e){this.Title=e.Title,this.Anchors={Output:"Output",Menu:"Menu",Options:"Options",Export:"Export",Results:"Results",PlateSelect:"PlateSelect",ResultPlate:"ResultPlate",PlateDoAll:"PlateDoAll",PairingTarget:"PairingTarget"};let t="";return t+='<div id="'+this.Anchors.Menu+'"></div>',t+='<div id="'+this.Anchors.Output+'"></div>',GetId("Main").innerHTML=t,this.Results=new RespTable({ID:this.Anchors.Results,Array:window.opener.Results.map((function(e){return e.LoggedPlate=0,e})),Fields:["Name","Size","Info"],Headers:["Name","Size","Parameters"],onSelect:function(e,t,l,i){l[0]!=i[0]&&(Report.saveState(this,i[0]),this.setPlates().do(),Report.restoreState(this,l[0]))}.bind(this),FullWidth:!0,RowNumbers:!0,NoControls:!0}),this.Blocs=[],this.Output=new TabControl({ID:this.Anchors.Output,Layout:"Horizontal",Tabs:[]}),this.Menu=new TabControl({ID:this.Anchors.Menu,Multiple:!0,Layout:"Menu",Tabs:[{Label:"Options",Active:!0,Content:{Type:"HTML",Value:'<div id="'+this.Anchors.Options+'"></div>'}},{Label:"Export",Active:!0,Content:{Type:"HTML",Value:'<div id="'+this.Anchors.Export+'"></div>'}},{Label:"Results",Active:!0,Content:{Type:"HTML",Value:'<div id="'+this.Anchors.Results+'"></div>'}},{Label:"Plates",Active:!0,Content:{Type:"HTML",Value:'<fieldset id="'+this.Anchors.PlateSelect+'"><legend>Result</legend><div id="'+this.Anchors.ResultPlate+'"></div><div style="text-align: center; margin-bottom: 10px" id="'+this.Anchors.PairingTarget+'"></div><div id="'+this.Anchors.PlateDoAll+'"></div></fieldset>'}}]}),this.Options={Collapse:LinkCtrl.new("Checkbox",{ID:this.Anchors.Options,Label:"Collapse tables",Default:!0,Chain:{Index:0},Change:function(e){let t=this.Options.Rows;e?t.enable():t.disable(),this.refresh("Rows",{Collapse:e,Rows:t.getValue()})}.bind(this),Title:"Tick to limit the number of rows displayed in tables"}),Rows:LinkCtrl.new("Number",{ID:this.Anchors.Options,Label:"Rows",Default:10,Min:2,Step:1,Chain:{Index:1,Last:!0},Change:function(e){this.refresh("Rows",{Collapse:!0,Rows:e})}.bind(this),Title:"Maximum number of rows to show for each table"}),Decimals:LinkCtrl.new("Select",{ID:this.Anchors.Options,Label:"Decimals",Default:3,List:[0,1,2,3,4,5,6,"All"],Chain:{Index:2,NewLine:!0},Change:function(e){this.refresh("Decimals")}.bind(this),Title:"Number of decimals to show for the computed values. Parsed values from the file are not affected"}),CV:LinkCtrl.new("Checkbox",{ID:this.Anchors.Options,Label:"Show CV",Default:!1,Chain:{Index:3,Last:!0},Change:function(e){this.refresh("CV",{Show:e})}.bind(this),Title:"Tick to show the coefficient of varation (CV, %) for the data"}),LogScale:LinkCtrl.new("Checkbox",{ID:this.Anchors.Options,Label:"Log Scale",Default:!1,Chain:{Index:4,NewLine:!0},Change:function(e){this.refresh("Log")}.bind(this),Title:"Tick to show the concentration data in log scale"}),Shift:LinkCtrl.new("Checkbox",{ID:this.Anchors.Options,Label:"Shift unit",Default:!1,Chain:{Index:5,Last:!0},Change:function(e){this.refresh("Log")}.bind(this),Title:"Tick to shift the concentration data to their closest parent value (i.e. M or g/mL) when using the log scale"}),ExportFormat:LinkCtrl.new("Radio",{ID:this.Anchors.Export,Default:0,Label:"Export values",List:["From file","Displayed"],Title:"Controls wheter the exported data should be as they appear in the file (From file), or as they appear in the table (Displayed)"})},this.UI={Plate:LinkCtrl.new("Select",{ID:this.Anchors.ResultPlate,Default:0,List:[],Label:"Plate",Change:function(e){this.Result.LoggedPlate=e,this.pairStatus(e),this.do()}.bind(this),Title:"The result plate for which values will be displayed"})},this.Menu.init(),this.Output.init(),this.Results.init(),Object.values(this.Options).forEach((function(e){e.init()})),GetId(this.Anchors.Export).append(LinkCtrl.buttonBar([{Label:"Export All",Title:"Export all the data generated by the report, as a zip file containing tab-delimited text files",Click:this.exportAll.bind(this)}])),this}static new(e){switch(e.Method){case"zFactor":return new Report_Controls(e);case"Aggregate":return new Report_Aggregate(e);case"Grouped":return new Report_Grouped(e);case"Hits":return new Report_Hits(e);default:return new Report(e)}}static getBloc(e,t){let l=!1,i=0,a=e.Blocs,s=a.length;for(;!l&&i<s;)a[i].Name==t?l=!0:i++;return l?(e.Output.Tabs[i].set("Enabled"),e.Blocs[i]):(e.Result.OpenedTab=i,e.newBloc(t,i))}static*plateIterator(e){let t=e.length;for(let l=0;l<t;l++)yield e[l]}static lock(e,t){Form.open({ID:"Report_Mask",HTML:'<p><span class="warning">Parsing in progress, please wait...<span></p><p>Processing plate <span id="Mask_PlateNumber">1</span> / '+t+"</p>",Title:"Analysis in progress...",Buttons:[{Label:"Abort",Click:function(){e.cancel()}}],onCancel:function(){e.cancel()}})}static unlock(){Form.close("Report_Mask")}static plateCount(e){let t=GetId("Mask_PlateNumber");t&&(t.innerHTML=e)}static cleanName(e){let t=e.Result.Name,l=t.lastIndexOf(".");return l>-1?this.cleanFileName(t.substring(0,l)):this.cleanFileName(t)}static cleanFileName(e){return""==e||void 0===e?"unknown":e.trim().replace(/[^a-z0-9_\-\[\]\(\)\.]/gi,"_").replace(/_{2,}/g,"_")}static saveState(e,t){e.Results.Array[t].OpenedTab=e.Output.active(),e.Output.disable()}static restoreState(e,t){let l=e.Results.Array[t].OpenedTab;void 0!==l&&e.Output.jumpTo(l)}static blocName(e){return e.ResultIndex+". "+e.Name}get Result(){return void 0===this.Results.Selected[0]&&this.Results.setValue([0]),this.Results.Selected[0]}get FirstBlocIndex(){let e=this.Results.SelectedIndices[0]+1+". ",t=!1,l=0,i=this.Blocs,a=i.length;for(;!t&&l<a;)i[l].Name.startsWith(e)?t=!0:l++;return t?l:void 0}get Params(){return this.Result.Parameters}init(){return Object.values(this.UI).forEach((function(e){e.init()})),this.setPlates(),this.do(),this}do(){}setPlates(){let e=this.UI.Plate,t=this.Result.PlatesID;e.List=t,t.length>1?(e.NavBar=!0,e.Lookup={Active:!1}):(e.NavBar=!1,e.Lookup=void 0);let l=this.Result.LoggedPlate;return e.setValue(l),e.init(),this.pairStatus(l),this}pairStatus(e,t){let l=GetId(this.Anchors.PairingTarget);if(void 0===this.Result.Pairing)return void(l.innerHTML=Pair.unpaired().Html);let i=this.Result.Pairing.Pairs[e];if(void 0===i)return void(l.innerHTML=Pair.unpaired().Html);if(this.Ranges){i.getDefPlate(this.Ranges).forEach((function(e,l){let a=this.UI["Definition_"+e.RangeIndex];t&&t.Check?e.DefPlateIndex==a.getValue()?i.Table[l].Broken=!1:i.Table[l].Broken=!0:(a.setValue(e.DefPlateIndex).change(),i.Table[l].Broken=!1)}),this)}let a=i.state();return l.innerHTML=a.Html,this}newBloc(e,t){let l="Bloc_"+t,i=new Bloc({Name:e,ID:l,File:this.Result.Name});return this.Blocs.push(i),this.Output.addTab({Label:e,SetActive:!0,Content:{Type:"HTML",Value:"<p>Data for Result file: "+this.Result.Name+'</p><div id="'+l+'"><span class="warning">Initializing the report, please wait...</span></div>'}}),i.init()}cancel(){return this.Cancel=!0,this}refresh(e,t){switch(e){case"Rows":this.refreshRows(t);break;case"Decimals":this.refreshDecimals(t);break;case"CV":this.refreshCV(t.Show);break;case"Log":this.refreshLog(t)}return this}refreshRows(e){let t="unset";e.Collapse&&(t=Analyzer.divHeight(e.Rows));let l=GetId("Output").getElementsByClassName("InnerTable_Wrapper"),i=l.length;for(let a=0;a<i;a++){let i=l[a],s=i.children[0].rows.length;i.style.maxHeight=t,s<=e.Rows?i.style.overflowY="unset":i.style.overflowY="scroll"}return this}refreshDecimals(e){let t=[];t=e&&e.LogOnly?GetId("Output").getElementsByClassName("Value_PlaceHolder Header_Conc"):GetId("Output").getElementsByClassName("Value_PlaceHolder");let l=t.length;for(let i=0;i<l;i++){let l=t[i];if(l.hasAttribute("value")){let t=Number(l.getAttribute("value"));e&&e.Log&&(t=Math.log10(t),e.Shift&&(t+=Number(l.getAttribute("shift"))),l.setAttribute("logvalue",t)),""!=t&&0==isNaN(t)&&(l.innerHTML=Analyzer.roundNb(t))}}if(e&&e.LogOnly)return;let i=GetId("Output").getElementsByClassName("InnerTableRow"),a=i.length;for(let e=0;e<a;e++){let t=i[e],l=t.rows[0].cells.length,a=2;for(let e=0;e<l;e++)a=Math.max(a,t.rows[0].cells[e].innerText.length);t.style.minWidth=Analyzer.rowWidth(l,a)}return this}refreshCV(e){let t=GetId("Output").getElementsByClassName("CV_Row"),l=t.length,i="none";e&&(i="table-row");for(let e=0;e<l;e++)t[e].style.display=i;return this}refreshLog(e){let t=this.Options.LogScale.getValue(),l=this.Options.Shift.getValue(),i=GetId("Output").querySelectorAll("span.Header_Conc"),a=i.length;for(let e=0;e<a;e++){let a=i[e];a.innerHTML=t?Analyzer.headerConcLog(a.getAttribute("name"),l):a.getAttribute("name")}this.refreshDecimals({LogOnly:!0,Log:t,Shift:l})}exportAll(){let e=new JSZip,t="Form_Save";return Form.open({ID:t,HTML:'<p id="Form_Save_Output"><span class="warning">Preparing zip archive, please wait...</span></p>',Title:"Export data",Buttons:[{Label:"Close",Click:function(){Form.close(t)}}]}),this.Blocs.forEach((function(t){let l=e.folder(t.File).folder(Report.cleanFileName(t.Name));t.Sections.forEach((function(e){let t=e.export({BlobOnly:!0});l.file(Report.cleanFileName(e.Name+".txt"),t)}))})),e.generateAsync({type:"blob"}).then((function(e){let l=GetId("Form_Save_Output");if(l){let i=URL.createObjectURL(e);l.innerHTML='<p>Click on the link below to download and save your file:</p><p style="text-align: center;"><a href="'+i+'" download="ExportAll.zip">ExportAll.zip</a></p>',Form.replaceButtons(t,[{Label:"Close",Click:function(){URL.revokeObjectURL(i),Form.close(t)}}])}})),this}}class Section{constructor(e){return this.ID=e.ID,this.Bloc=e.Bloc,this.Name=e.Name,this.TableType=e.TableType||"Simple",this.Summary=e.Summary,this.Summary&&(this.Tables=[],this.Headers=e.Headers,e.Tables.forEach((function(e,t){let l={ID:this.ID+"_Table_"+t,Columns:[]};void 0!==e.Visible?l.Visible=e.Visible:l.Visible=!0,void 0!==e.Title?l.Title=e.Title:l.Title="Table "+t,this.Headers.forEach((function(e){l.Columns.push({Label:e,Visible:!0,Values:[]})})),this.Tables.push(l)}),this)),this}static getTables(e){if(e.Summary){let t=[];return e.Tables.forEach((function(e){let l=GetId(e.ID);"none"!=l.style.display&&t.push(l.lastChild)})),t}switch(e.TableType){case"Simple":return GetId(e.ID).getElementsByClassName("Table");default:return GetId(e.ID).getElementsByClassName("OuterTable")}}static fullName(e){let t=[e.Bloc.File,e.Bloc.Name,e.Name].map((function(e){return Report.cleanFileName(e)}));return("("+t[0]+")_"+t[1]+"_["+t[2]+"]").replace(/_{2,}/g,"_")}static fileHeader(e){let t=[e.Bloc.Name,e.Name].map((function(e){return Report.cleanFileName(e)}));return"Data for Result file: ["+e.Bloc.File+"]; Parameter:  ["+t[0]+"]; Table: ["+t[1]+"]\n"}HTML(e){let t="";return t+="<fieldset><legend>"+e+'</legend><div class="Section_Controls"></div><div id="'+this.ID+'" class="Section">',this.Summary&&(t+="<div>",this.Tables.forEach((function(e){t+='<div id="'+e.ID+'" style="float: left;border: 1px solid darkred;border-radius: 5px;padding: 5px; margin: 5px"></div>'})),t+="</div>"),t+="</div></fieldset>",t}replaceContent(e){return GetId(this.ID).innerHTML=e,this}activateControls(){GetId(this.ID).previousSibling.append(LinkCtrl.buttonBar([{Label:"Export",Title:"Click to export the data for this section",Click:function(){this.export({FileName:Section.fullName(this)})}.bind(this)},{Label:"Printable version",Title:"Click to view the data in a new window, allowing for printing or easy copy-pasting in other applications",Click:function(){this.printable()}.bind(this)}]))}updateTable(e,t,l,i,a){let s=this.Tables[e],n=this.Headers.indexOf(t);if(-1==n)return console.warn("Could not find '"+t+"' column in table headers",this),this;let r=s.Columns[n].Values.indexOf(l);r>-1?s.Columns.forEach((function(e,t){e.Values[r]=i[t]})):s.Columns.forEach((function(e,t){e.Values.push(i[t])}));let o=Analyzer.objectToTable(s.Columns,{Sync:!0}),h=GetId(s.ID);return h.innerHTML='<p class="Title">'+s.Title+"</p>"+o.HTML,a&&void 0!==a.Visible&&(a.Visible?h.style.display="block":h.style.display="none"),this}hideAllTables(){return this.Summary&&this.Tables.forEach((function(e){GetId(e.ID).style.display="none"})),this}hasData(e,t,l){let i=!1,a=this.Tables[e];if(void 0===a)return!1;let s=this.Headers.indexOf(t);if(-1==s)return!1;let n=a.Columns[s].Values,r=n.length,o=0;for(;!i&&o<r;)n[o]==l&&(i=!0),o++;return i}export(e){let t=Section.getTables(this),l=t.length,i=Section.fileHeader(this),a="";for(let e=0;e<l;e++){let l=t[e];0==e?a=l.previousSibling.innerText:(i+="\n\n",a="Inner"==this.TableType?l.previousSibling.innerText:void 0),i+=Analyzer.tableToString(l,{Title:a,TableType:this.TableType})}let s=new Blob([i],{type:"text/plain;charset=utf-8"});if(e&&e.BlobOnly)return s;let n="Results.txt";return e&&e.FileName&&(n=e.FileName+".txt"),Form.download(i,{FileName:n}),this}printable(){return Reporter.printable(GetId(this.ID).innerHTML),this}}class Report_Aggregate extends Report{constructor(e){super(e);let t=window.opener.Aggregate;t.Combinations.A.forEach((function(e){e.Selected=!0})),this.Ranges=t.Ranges,this.ResolvedNames=[],this.Menu.addTabs([{Label:"Areas",SetActive:!0,Content:{Type:"HTML",Value:'<div style="max-height: 500px; overflow: auto" id="Areas"></div>'}}]),this.UI.A=new RespTable({ID:"Areas",Fields:["Name"],RowNumbers:!0,NoControls:!0,Multiple:!0,Array:t.Combinations.A,onSelect:this.computeStats.bind(this)});let l=LinkCtrl.button({Label:"Compute all",Title:"Click here to compute the stat summaries for all plates",Click:function(){this.statsAllPlates()}.bind(this)});GetId(this.Anchors.PlateDoAll).append(l);let i=LinkCtrl.buttonBar([{Label:"Unselect all",Title:"Click here to unselect all areas",Click:function(){this.UI.A.setValue([]),this.computeStats()}.bind(this)},{Label:"Select all",Title:"Click here to select all areas",Click:function(){this.UI.A.selectAll(),this.computeStats()}.bind(this)}]);return GetId(this.Anchors.PlateSelect).insertAdjacentHTML("afterend",'<fieldset><legend>Definitions</legend><div id="Definitions_Select"><i>None available</i></div></fieldset>'),GetId("Areas").parentElement.prepend(i),this.Ranges.forEach((function(e,t){let l=e.Definition;if(void 0!==l){let e=LinkCtrl.new("Select",{ID:"Definitions_Select",NewLine:!0,Index:t,Default:0,List:l.PlatesID,Label:l.Area.Name,Title:"The plate to use for the resolution of the names for this range",Change:function(e){this.resolveNames(l,t).then(function(e){this.ResolvedNames[t]=e,this.updateNames(l.Area,t)}.bind(this)),void 0!==e&&this.pairStatus(this.UI.Plate.getValue(),{Check:!0})}.bind(this)});e.List.length>1&&(e.NavBar=!0,e.Lookup={Active:!1}),t>0&&(e.Preserve=!0),this.UI["Definition_"+t]=e}}),this),this}do(){return this.NameResolved?this.computeStats():this.resolveAllNames().then(function(){this.NameResolved=!0,this.computeStats()}.bind(this)),this}resolveAllNames(){let e=[];return new Promise(function(t){this.Ranges.forEach((function(t,l){let i=t.Definition;void 0!==i?e.push(this.resolveNames(i,l)):e.push(void 0)}),this),Promise.all(e).then(function(e){this.ResolvedNames=e,t()}.bind(this))}.bind(this))}resolveNames(e,t){let l=e.Area,i=l.MaxRange,a={Plate:this.UI["Definition_"+t].Selected,Factor:i,Default:"",AreaName:l.Name,Column:e.Mapping[Mapper.definition().Name],RangeIndexBase0:l.MaxRange,FindAll:!0};return new Promise(function(l){e.Mapper.find(e,a).then(function(i){switch(Mapper.modeWellPlate(e.Mapping)){case"Plate":case"Direct":l(i);break;case"Well":case"PlateWell":let e=[];this.Ranges[t].Values.forEach((function(t){e.push(i[t.Tags[0]])})),l(e)}}.bind(this))}.bind(this))}updateNames(e,t){let l=this.Ranges;void 0!==e&&(l=Array(this.Ranges.length),l[t]=e);let i=GetId("Output").getElementsByTagName("TH"),a=i.length;for(let e=0;e<a;e++){let t=i[e],a=t.innerHTML;t.hasAttribute("RootName")?a=t.getAttribute("RootName"):t.setAttribute("RootName",a),l.forEach((function(e,l){if(void 0!==e&&void 0!==this.ResolvedNames[l]){let i=e.Name+" #",s=i.length,n=a.indexOf(i);if(n>-1){n+=s;let e=a.indexOf(" ",n),r=Number(a.substring(n,e));-1==e&&(r=Number(a.substring(n))),t.innerHTML=a.replace(i+r,this.ResolvedNames[l][r-1])}}}),this)}}getValues(e){this.UI.A.Array.forEach((function(e){e.Values=[]}));let t=this.Results.SelectedIndices[0]+1,l={Items:0,Areas:this.UI.A.Array,Params:[]};this.Params.forEach((function(e,i){e.Selected&&(l.Params.push({Index:i,Name:e.Name,ResultIndex:t}),l.Areas.forEach((function(e){e.Values.push([])})))}),this),this.waitMessage(l.Params);let i=function(t,l,i,a,s){if(l==e){let e=t.Index;a.Areas.forEach((function(t){t.Tags.includes(e)&&a.Params.forEach((function(e,l){t.Values[l].push(Number(i[e.Index]))}))}))}};return new Promise(function(e){this.Result.Mapper.scan(this.Result,{Custom:i},l).then((function(t){e(t)}))}.bind(this))}waitMessage(e){e.forEach((function(e,t){Report.getBloc(this,Report.blocName(e)).Sections.forEach((function(e){void 0===e.Summary&&e.replaceContent('<span class="warning">Parsing values, please wait...</span>')}))}),this)}computeStats(){let e=this.UI.Plate.Selected;return this.getValues(e).then(function(t){let l=this.processValues(t,e);this.Result.PlatesID.length>1&&this.plateSummary(t,e,l),this.updateNames()}.bind(this)),this}processValues(e,t){let l=[];return e.Params.forEach((function(i,a){let s=Report.getBloc(this,Report.blocName(i)).getSection("Values",{TableType:"Inner"}),n=this.valueTable(e,a);s.replaceContent('<p class="Title">Data for plate: '+t+"</p>"+n.HTML),l.push(n.Stats)}),this),l}valueTable(e,t){let l=[];return e.Areas.forEach((function(e){l.push({Label:e.Name,Values:e.Values[t],Visible:e.Selected})})),Analyzer.objectToTable(l)}plateSummary(e,t,l){let i=this.plateSummaryTables(e);e.Params.forEach((function(e,a){let s=Report.getBloc(this,Report.blocName(e)).getSection("Plate Summary",{Summary:!0,Tables:i,Headers:["Plate","Average","SD","CV (%)","N"],TableType:"Inner"});l[a]?i.forEach((function(e,i){let n=l[a][i];s.updateTable(i,"Plate",t,[t,n.Avg,n.SD,n.CV,n.N],{Visible:e.Visible})})):s.hideAllTables()}),this)}plateSummaryTables(e){let t=[];return e.Areas.forEach((function(e){t.push({Title:e.Name,Visible:e.Selected})})),t}async statsAllPlates(){this.Cancel=!1;let e=this.Result.PlatesID,t=this.plateSummaryTables({Areas:this.UI.A.Array});Report.lock(this,e.length);let l=Report.plateIterator(e),i=l.next(),a=0;for(;0==i.done&&0==this.Cancel;){let e=i.value;if(0==Report.getBloc(this,this.Blocs[this.FirstBlocIndex].Name).getSection("Plate Summary",{Summary:!0,Tables:t,Headers:["Plate","Average","SD","CV (%)","N"],TableType:"Inner"}).hasData(0,"Plate",e)){let t=await this.getValues(e),l=this.processValues(t,e);this.plateSummary(t,e,l),this.UI.Plate.setValue(a)}i=l.next(),a++,Report.plateCount(a+1)}Report.unlock()}}class Report_Controls extends Report{constructor(e){super(e);let t=window.opener.zFactor;[t.Controls.N,t.Controls.P].forEach((function(e){e.forEach((function(e){e.Selected=!0}))}));let l="";l+='<fieldset style="margin-bottom: 10px"><legend>Positive</legend><div id="Ctrl_Pos"></div></fieldset>',l+='<fieldset style="margin-bottom: 10px"><legend>Negative</legend><div id="Ctrl_Neg"></div></fieldset>',this.Menu.addTabs([{Label:"Controls",SetActive:!0,Content:{Type:"HTML",Value:'<fieldset style="margin-bottom: 10px"><legend>Positive</legend><div id="Ctrl_Pos"></div></fieldset><fieldset style="margin-bottom: 10px"><legend>Negative</legend><div id="Ctrl_Neg"></div></fieldset>'}}]),this.UI.P=new RespTable({ID:"Ctrl_Pos",Fields:["Name"],RowNumbers:!0,Multiple:!0,NoControls:!0,Array:t.Controls.P,onSelect:this.computeZFactor.bind(this)}),this.UI.N=new RespTable({ID:"Ctrl_Neg",Fields:["Name"],RowNumbers:!0,Multiple:!0,NoControls:!0,Array:t.Controls.N,onSelect:this.computeZFactor.bind(this)});let i=LinkCtrl.button({Label:"Compute all",Title:"Click here to compute the Z-factor/Window summaries for all plates",Click:function(){this.zScoreAllPlates()}.bind(this)});GetId(this.Anchors.PlateDoAll).append(i);let a=LinkCtrl.buttonBar([{Label:"Unselect all",Title:"Click here to unselect all positive controls",Click:function(){this.UI.P.setValue([]),this.computeZFactor()}.bind(this)},{Label:"Select all",Title:"Click here to select all positive controls",Click:function(){this.UI.P.selectAll(),this.computeZFactor()}.bind(this)}]);GetId("Ctrl_Pos").parentElement.prepend(a);let s=LinkCtrl.buttonBar([{Label:"Unselect all",Title:"Click here to unselect all negative controls",Click:function(){this.UI.N.setValue([]),this.computeZFactor()}.bind(this)},{Label:"Select all",Title:"Click here to select all negative controls",Click:function(){this.UI.N.selectAll(),this.computeZFactor()}.bind(this)}]);return GetId("Ctrl_Neg").parentElement.prepend(s),this}static combinationName(e,t){return"["+t.Name+"] vs ["+e.Name+"]"}do(){return this.computeZFactor(),this}getControlValues(e){[this.UI.N.Array,this.UI.P.Array].forEach((function(e){e.forEach((function(e){e.Values=[]}))}));let t=this.Results.SelectedIndices[0]+1,l={Items:0,Neg:this.UI.N.Array,Pos:this.UI.P.Array,Params:[]};this.Params.forEach((function(e,i){e.Selected&&e.Numeric&&(l.Params.push({Index:i,Name:e.Name,ResultIndex:t}),[l.Neg,l.Pos].forEach((function(e){e.forEach((function(e){e.Values.push([])}))})))}),this),this.waitMessage(l.Params);let i=function(t,l,i,a,s){if(l==e){let e=t.Index;[a.Neg,a.Pos].forEach((function(t){t.forEach((function(t){t.Tags.includes(e)&&a.Params.forEach((function(e,l){let a=i[e.Index];""==a?t.Values[l].push(""):t.Values[l].push(Number(a))}))}))}))}};return new Promise(function(e){this.Result.Mapper.scan(this.Result,{Custom:i},l).then((function(t){e(t)}))}.bind(this))}waitMessage(e){e.forEach((function(e,t){Report.getBloc(this,Report.blocName(e)).Sections.forEach((function(e){void 0===e.Summary&&e.replaceContent('<span class="warning">Parsing values, please wait...</span>')}))}),this)}computeZFactor(){let e=this.UI.N.Selected[0],t=this.UI.P.Selected[0];if(void 0===e&&void 0===t)return;let l=this.UI.Plate.Selected;this.getControlValues(l).then(function(e){let t=this.processValues(e,l),i=this.processZscore(t,e,l);this.Result.PlatesID.length>1&&this.plateSummary(e,l,i)}.bind(this))}processValues(e,t){let l=[];return e.Params.forEach((function(i,a){let s=Report.getBloc(this,Report.blocName(i)).getSection("Values",{TableType:"Inner"}),n=this.valueTable(e,a);s.replaceContent('<p class="Title">Data for plate: '+t+"</p>"+n.HTML),l.push(n.Stats)}),this),l}valueTable(e,t){let l=[];return[e.Neg,e.Pos].forEach((function(e){e.forEach((function(e){l.push({Label:e.Name,Values:e.Values[t],Visible:e.Selected})}))})),Analyzer.objectToTable(l)}processZscore(e,t,l){let i=[];return t.Params.forEach((function(a,s){let n=Report.getBloc(this,Report.blocName(a)).getSection("Z-factors"),r=this.zScoreTable(e[s],t);n.replaceContent('<p class="Title">Data for plate: '+l+"</p>"+r.HTML),i.push(r.Score)}),this),i}zScoreTable(e,t){let l=t.Neg.length,i="",a=[{Name:"Z'",Method:this.zScoreFromStats.bind(this),Scores:[]},{Name:"Window",Method:this.windowFromStats.bind(this),Scores:[]}],s=!1;return a.forEach((function(a,n){i+='<table class="Table"',n>0&&(i+='style="margin-top: 20px"'),i+="><tr><th>"+a.Name+"</th>",t.Pos.forEach((function(e){e.Selected&&(i+="<th>"+e.Name+"</th>")})),i+="</tr>",t.Neg.forEach((function(n,r){n.Selected&&(i+="<tr><th>"+n.Name+"</th>"),t.Pos.forEach((function(t,o){let h=a.Method(e[r],e[l+o]);a.Scores.push(h),t.Selected&&n.Selected&&(i+=Analyzer.cellForValue(h.Value,{Class:h.Class,Type:"#"}),s=!0)}),this),n.Selected&&(i+="</tr>")}),this),i+="</table>"}),this),0==s?{HTML:'<span class="warning">Select at least one negative and one positive control to calculate a Z-factor!</span>'}:{HTML:i,Score:a}}zScoreFromStats(e,t){let l=1-(t.SD+e.SD)/Math.abs(t.Avg-e.Avg)*3;return{Class:this.classForZ(l),Value:l}}windowFromStats(e,t){let l=e.Avg,i=t.Avg,a=Math.max(l,i)/Math.min(l,i);return{Class:this.classForW(a),Value:a}}classForW(e){return e>2?"good":e>1?"neutral":"bad"}classForZ(e){return e>.4?"good":e>.2?"neutral":"bad"}plateSummary(e,t,l){let i=this.plateSummaryTables(e);e.Params.forEach((function(e,a){let s=Report.getBloc(this,Report.blocName(e)).getSection("Plate Summary",{Summary:!0,Tables:i,Headers:["Plate","Z'","Window"],TableType:"Inner"});if(l[a]){let e=l[a][0].Scores,n=l[a][1].Scores;i.forEach((function(l,i){s.updateTable(i,"Plate",t,[t,e[i],n[i]],{Visible:l.Visible})}))}else s.hideAllTables()}),this)}plateSummaryTables(e){let t=[];return e.Neg.forEach((function(l){e.Pos.forEach((function(e){t.push({Title:Report_Controls.combinationName(e,l),Visible:e.Selected&&l.Selected})}))})),t}async zScoreAllPlates(){this.Cancel=!1;let e=this.Result.PlatesID,t=this.plateSummaryTables({Neg:this.UI.N.Array,Pos:this.UI.P.Array});Report.lock(this,e.length);let l=Report.plateIterator(e),i=l.next(),a=0;for(;0==i.done&&0==this.Cancel;){let e=i.value.toString();if(0==Report.getBloc(this,this.Blocs[this.FirstBlocIndex].Name).getSection("Plate Summary",{Summary:!0,Tables:t,Headers:["Plate","Z'","Window"]}).hasData(0,"Plate",e)){let t=await this.getControlValues(e),l=this.processValues(t,e),i=this.processZscore(l,t,e);this.plateSummary(t,e,i),this.UI.Plate.setValue(a),this.pairStatus(a)}i=l.next(),a++,Report.plateCount(a+1)}Report.unlock()}}class Report_Grouped extends Report{constructor(e){super(e);let t=window.opener.Grouped;this.Areas=t.Areas.map((function(e){return e.Available=!0,e.Values=[{Name:e.Name,Value:e.Name,Tags:e.Tags}],e})),this.Ranges=t.Ranges.map((function(e){return e.Available=!0,e})),this.Concentrations=t.Conc.map((function(e){return e.Available=!0,e})),this.ResolvedNames=[],this.Menu.addTabs([{Label:"Data selected",SetActive:!0,Content:{Type:"HTML",Value:'<div id="Report_Ready"><span class="warning">Resolving definitions, please wait...</span></div><fieldset id="AddRowCol"><div id="Data_Options"></div></fieldset><fieldset><legend>Rows</legend><div style="max-height: 500px; overflow: auto" id="SelectedRows"></div></fieldset><fieldset><legend>Columns</legend><div style="max-height: 500px; overflow: auto" id="SelectedCols"></div></fieldset>'}}]),GetId(this.Anchors.PlateSelect).insertAdjacentHTML("afterend",'<fieldset><legend>Definitions</legend><div id="Definitions_Select"><i>None available</i></div></fieldset>'),this.UI.Rows=new RespTable({ID:"SelectedRows",Fields:["Name"],RowNumbers:!0,Array:[],onDelete:function(e){e.Available=!0},onUpdate:function(e){void 0!==e&&"Select"==e.Action||this.compute()}.bind(this)}),this.UI.Cols=new RespTable({ID:"SelectedCols",Fields:["Name"],RowNumbers:!0,Array:[],onDelete:function(e){e.Available=!0},onUpdate:function(e){void 0!==e&&"Select"==e.Action||this.compute()}.bind(this)}),this.UI.DataView=LinkCtrl.new("Select",{ID:"Data_Options",Default:0,Label:"Aggregation",List:["Avg, SD, N","Average","Column","Row"],Preserve:!0,Change:this.compute.bind(this),Title:"Indicates how multiple values are displayed in the grouped table: arrayed in a single column or in consecutive rows; show only the average; show the average, standard deviation and number of samples"});let l=LinkCtrl.buttonBar([{Label:"Add Rows",Title:"Click here to add rows of data to the summary table",Click:function(){this.addData("Rows")}.bind(this)},{Label:"Add Columns",Title:"Click here to add columns of data to the summary table",Click:function(){this.addData("Cols")}.bind(this)}]);return GetId("AddRowCol").prepend(l),this.Ranges.forEach((function(e,t){let l=e.Definition;if(void 0!==l){let e=LinkCtrl.new("Select",{ID:"Definitions_Select",NewLine:!0,Index:t,Default:0,List:l.PlatesID,Label:l.Area.Name,Title:"The plate to use for the resolution of the names for this range",Change:function(e){this.resolveNames(l,t).then(function(e){this.ResolvedNames[t]=e,this.updateNames(l.Area,t)}.bind(this)),void 0!==e&&this.pairStatus(this.UI.Plate.getValue(),{Check:!0})}.bind(this)});e.List.length>1&&(e.NavBar=!0,e.Lookup={Active:!1}),t>0&&(e.Preserve=!0),this.UI["Definition_"+t]=e}}),this),GetId("Output").innerHTML='<p class="Note">Add Rows and Columns of data to start</p>',this}do(){return this.Ready?this.compute():this.resolveAllNames().then(function(){this.Ready=!0,GetId("Report_Ready").remove(),this.compute()}.bind(this)),this}addData(e){let t="Form_AddData",l=t+"_Available",i=t+"_Selected",a=new TabControl({ID:l,Layout:"Menu",Tabs:[{Label:"Areas",Active:!0,Content:{Type:"HTML",Value:this.available("Areas",l,i)}},{Label:"Ranges",Content:{Type:"HTML",Value:this.available("Ranges",l,i)}},{Label:"Concentrations",Content:{Type:"HTML",Value:this.available("Concentrations",l,i)}}]}),s="";s+='<fieldset style="width:350px; overflow: auto; float: left"><legend>Data available</legend><p class="Note">Click to select data</p><div id="'+l+'"></div></fieldset>',s+='<fieldset style="margin-left: 400px;"><legend>Selected</legend><p class="Note">Click to unselect data</p><div id="'+i+'" style="border-top: 1px solid silver; float: left"></div></fieldset>',Form.open({ID:t,Size:800,Title:"Add "+e,HTML:'<fieldset style="width:350px; overflow: auto; float: left"><legend>Data available</legend><p class="Note">Click to select data</p><div id="Form_AddData_Available"></div></fieldset><fieldset style="margin-left: 400px;"><legend>Selected</legend><p class="Note">Click to unselect data</p><div id="Form_AddData_Selected" style="border-top: 1px solid silver; float: left"></div></fieldset>',Buttons:[{Label:"Ok",Click:function(){let l=GetId(i).children;this.updateSelectedData(e,l),Form.close(t)}.bind(this)},{Label:"Cancel",Click:function(){let l=GetId(i).children;this.updateSelectedData(e,l,{Cancel:!0}),Form.close(t)}.bind(this)}],onInit:function(){a.init();let e=GetId(t).getElementsByClassName("Selectable_Row"),s=e.length;for(let t=0;t<s;t++)e[t].addEventListener("click",function(e){this.moveRow(e.target,l,i)}.bind(this))}.bind(this),onCancel:function(){let t=GetId(i).children;this.updateSelectedData(e,t,{Cancel:!0})}.bind(this)})}available(e,t,l){let i=t+"_"+e,a='<div id="'+i+'" style="border-top: 1px solid silver">';return this[e].forEach((function(t,l){let s=t.Name;t.Unit&&(s=t.Unit+" ("+t.Values.length+" values)"),"Range"==t.Type&&(s+=" ("+t.Values.length+" items)"),a+='<div class="Selectable_Row" category="'+e+'" originID="'+i+'" originIndex="'+l+'"',0==t.Available&&(a+=' style="display: none"'),a+=">"+s+"</div>"})),a+="</div>",a}moveRow(e,t,l){let i=e.getAttribute("category"),a=Number(e.getAttribute("originIndex")),s=this[i][a];if(s.Available)s.Available=!1,GetId(l).insertBefore(e,null);else{s.Available=!0;let t=GetId(e.getAttribute("originID")),l=t.children,i=l.length,n=!1,r=0;for(;0==n&&r<i;)l[r].getAttribute("originIndex")>a?(t.insertBefore(e,l[r]),n=!0):r++;0==n&&t.insertBefore(e,null)}}updateSelectedData(e,t,l){let i=t.length;for(let a=0;a<i;a++){let i=t[a].getAttribute("category"),s=t[a].getAttribute("originIndex"),n=this[i][s];l&&l.Cancel?n.Available=!0:this.UI[e].Array.push(this[i][s])}this.UI[e].update()}resolveAllNames(){let e=[];return new Promise(function(t){this.Ranges.forEach((function(t,l){let i=t.Definition;void 0!==i?e.push(this.resolveNames(i,l)):e.push(void 0)}),this),Promise.all(e).then(function(e){this.ResolvedNames=e,t()}.bind(this))}.bind(this))}resolveNames(e,t){let l=e.Area,i=l.MaxRange,a={Plate:this.UI["Definition_"+t].Selected,Factor:i,Default:"",AreaName:l.Name,Column:e.Mapping[Mapper.definition().Name],RangeIndexBase0:l.MaxRange,FindAll:!0};return new Promise(function(l){e.Mapper.find(e,a).then(function(i){switch(Mapper.modeWellPlate(e.Mapping)){case"Plate":case"Direct":l(i);break;case"Well":case"PlateWell":let e=[];this.Ranges[t].Values.forEach((function(t){e.push(i[t.Tags[0]])})),l(e)}}.bind(this))}.bind(this))}updateNames(e,t){let l=this.Ranges;void 0!==e&&(l=Array(this.Ranges.length),l[t]=e);let i=GetId("Output").getElementsByTagName("TH"),a=i.length;for(let e=0;e<a;e++){let t=i[e],a=t.innerHTML;t.hasAttribute("RootName")?a=t.getAttribute("RootName"):t.setAttribute("RootName",a),l.forEach((function(e,l){if(void 0!==e&&void 0!==this.ResolvedNames[l]){let i=e.Name+" #",s=i.length,n=a.indexOf(i);if(n>-1){n+=s;let e=a.indexOf(" ",n),r=Number(a.substring(n,e));-1==e&&(r=Number(a.substring(n))),t.innerHTML=a.replace(i+r,this.ResolvedNames[l][r-1])}}}),this)}}getValues(e){let t={Items:0,Values:[],Params:[]},l=this.Results.SelectedIndices[0]+1;this.Params.forEach((function(e,i){e.Selected&&e.Numeric&&(t.Params.push({Index:i,Name:e.Name,ResultIndex:l}),t.Values.push([]))}),this),this.waitMessage(t.Params);let i=function(t,l,i,a,s){if(l==e){let e=t.Index;a.Params.forEach((function(t,l){a.Values[l][e]=i[t.Index]}))}};return new Promise(function(e){this.Result.Mapper.scan(this.Result,{Custom:i},t).then((function(t){e(t)}))}.bind(this))}waitMessage(e){e.forEach((function(e,t){Report.getBloc(this,Report.blocName(e)).Sections.forEach((function(e){void 0===e.Summary&&e.replaceContent('<span class="warning">Parsing values, please wait...</span>')}))}),this)}compute(){let e=this.UI.Rows.Array,t=this.UI.Cols.Array;if(0==e.length||0==t.length||1!=this.Ready)return this;let l=this.UI.Plate.Selected,i=this.UI.DataView.Selected;this.getValues(l).then(function(a){a.Params.forEach((function(s,n){let r=Report.getBloc(this,Report.blocName(s)).getSection("Values",{TableType:"Grouped"}),o=this.valueTable(e,t,a,n,i);r.replaceContent('<p class="Title">Data for plate: '+l+"</p>"+o.HTML)}),this),this.updateNames()}.bind(this))}valueTable(e,t,l,i,a){return Analyzer.groupedTable(e,t,l.Values[i],a)}}
//# sourceMappingURL=analyzer.min.js.map
